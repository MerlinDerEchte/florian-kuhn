{"version":3,"sources":["components/Shared/GaleryComponent.tsx","components/Pages/PageComponent.tsx","queries/getVita.ts","utils/richTextRendererOptions.tsx","components/Pages/Vita/VitaComponent.tsx","components/Pages/Work/ArtworklTitleListComponent.tsx","queries/getArtworks.ts","contexts/screenWidthContext.ts","types/ENavState.ts","components/Pages/Work/ArtworkComponent/ArtworkDesktopComponent.tsx","components/Pages/Work/ArtworkComponent/ArtworkMobileComponent.tsx","components/Pages/Work/ArtworkListComponent.tsx","components/Pages/Work/WorkComponent.tsx","components/Pages/Contact/ContactComponent.tsx","components/Nav/NavButton.tsx","components/Nav/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EImageSwitchDirection","PageComponent","title","children","className","GET_VITA","gql","richtTextRendererOptions","renderText","text","split","flatMap","i","VitaComponent","useQuery","data","loading","error","useState","content","EMPTY_DOCUMENT","portraitUrl","vitaData","setVitaData","useEffect","vitaModel","vitatext","json","console","log","portrait","url","documentToReactComponents","ArtworkTitleListComponent","titles","map","index","onClick","e","item","document","getElementById","scrollIntoView","block","behavior","scrollToItem","length","GET_ARTOWRKS","ScreenWidthContext","React","createContext","screenWidth","useScreenWidthContext","useContext","ENavState","useStyles","makeStyles","theme","clearIcon","fontSize","GaleryComponent","images","handleClose","clearClass","selectedImage","setSelectedImage","handleImagesSwitch","dir","FORWARD","BACKWARD","src","ArtworkDesktopComponent","artwork","selectedArtwork","onSelectArtwork","showArtworkGalery","setShowArtworkGalery","id","description","height","offset","overflow","scroll","once","placeholder","ArtworkMobileComponent","pic","ArtworkListComponent","artworks","setSelectedArtwork","onSelectArtworkMobile","setTimeout","aw","WorkComponent","setArtworks","artworkCollection","items","picturesCollection","createDate","Date","creationDate","push","sort","a","b","getTime","onTouchMove","stopPropagation","instagramIcon","ContactComponent","classes","NavButton","showNav","setShowNav","SHOWN","event","HIDDEN","toggleNav","Navbar","history","useHistory","handleNavigate","navigationString","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","setScreenWidth","INITIAL","handleResize","screenW","window","innerWidth","addEventListener","removeEventListener","Provider","value","activeClassName","to","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.69420eeb.chunk.js","sourcesContent":["import React, { FC, useState } from \"react\";\r\nimport { IImageData } from \"../../types/IImageData\";\r\nimport { ArtworkTitleListComponent } from \"../Pages/Work/ArtworklTitleListComponent\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport LazyLoad from \"react-lazyload\";\r\ntype GaleryComponentProps = {\r\n  images: IImageData[];\r\n  handleClose: () => void;\r\n};\r\n\r\nenum EImageSwitchDirection {\r\n  FORWARD,\r\n  BACKWARD,\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  clearIcon: {\r\n    fontSize: 40,\r\n  },\r\n}));\r\n\r\nexport const GaleryComponent: FC<GaleryComponentProps> = ({\r\n  images,\r\n  handleClose,\r\n}) => {\r\n  const clearClass = useStyles();\r\n  const [selectedImage, setSelectedImage] = useState<number>(0);\r\n  const handleImagesSwitch = (dir: EImageSwitchDirection) => {\r\n    if (dir === EImageSwitchDirection.FORWARD) {\r\n      if (selectedImage === images.length - 1) {\r\n        setSelectedImage(0);\r\n        return;\r\n      }\r\n      setSelectedImage(selectedImage + 1);\r\n    }\r\n    if (dir === EImageSwitchDirection.BACKWARD) {\r\n      if (selectedImage === 0) {\r\n        setSelectedImage(images.length - 1);\r\n        return;\r\n      }\r\n      setSelectedImage(selectedImage - 1);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"top-0 left-0 flex flex-col fixed h-screen w-screen bg-white justify-center items-center\">\r\n      <div\r\n        className=\"absolute top-5 right-14 text-xl gray-900 cursor-pointer\"\r\n        onClick={(e) => handleClose()}\r\n      >\r\n        <ClearIcon className={clearClass.clearIcon} />\r\n      </div>\r\n      {images.length > 1 ? (\r\n        <>\r\n          <div className=\"absolute left-20 top-1/2 h-12 w-12 transform -translate-y-6 cursor-pointer\">\r\n            <div\r\n              className=\"w-full h-full border-l-2 border-b-2 border-gray-300 transform rotate-45 hover:border-gray-500 \"\r\n              onClick={(e) => handleImagesSwitch(EImageSwitchDirection.FORWARD)}\r\n            ></div>\r\n          </div>\r\n          <div className=\"absolute right-20 top-1/2 h-12 w-12 transform -translate-y-6 cursor-pointer\">\r\n            <div\r\n              className=\"w-full h-full border-r-2 border-b-2 border-gray-300 transform -rotate-45 hover:border-gray-500 \"\r\n              onClick={(e) =>\r\n                handleImagesSwitch(EImageSwitchDirection.BACKWARD)\r\n              }\r\n            ></div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n        <div className=\"flex flex-initial h-4/5 w-4/5 flex flex-col justify-center items-center\">\r\n          <img\r\n            className=\"h-full\"\r\n            src={images.length > 0 ? images[selectedImage].url : \"\"}\r\n          />\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { ReactElement, FC } from 'react'; // importing FunctionComponent\r\n\r\ninterface IPageProps {\r\n    title: string\r\n}\r\n\r\nexport const PageComponent: FC<IPageProps> = ({ title, children }) => {\r\n\r\n    return(\r\n            <article className=\"flex-1 h-full w-screen text-xs font-mono flex flex-col overflow-hidden px-5 pt-10\">\r\n                {children}\r\n            </article>\r\n    )\r\n}","import {gql} from  '@apollo/client';\r\nexport const GET_VITA= gql`\r\n    query\r\n    {\r\n        vitaModel(id : \"5yglcnQHMvW2FBOfnAPum4\" ){\r\n            vitatext {\r\n                json\r\n            }\r\n            portrait {\r\n                url \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n`","export const richtTextRendererOptions: any = {\r\n    renderText: (text: any) =>\r\n      text.split(\"\\n\").flatMap((text: any, i: number) => [i > 0 && <br />, text]),\r\n  };","import React, { ReactElement, FC, useEffect, useState } from \"react\"; // importing FunctionComponent\r\nimport { PageComponent } from \"../PageComponent\";\r\nimport { GET_VITA } from \"../../../queries/getVita\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { richtTextRendererOptions } from \"../../../utils/richTextRendererOptions\";\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\r\nimport { Document, EMPTY_DOCUMENT } from \"@contentful/rich-text-types\";\r\n\r\n interface IVitaData {\r\n    content: Document;\r\n    portraitUrl: string;\r\n  }\r\n\r\n\r\n\r\nexport const VitaComponent: FC<any> = () => {\r\n  const { loading, error, data } = useQuery(GET_VITA);\r\n\r\n  const [vitaData, setVitaData] = useState<IVitaData>({\r\n    content: EMPTY_DOCUMENT,\r\n    portraitUrl: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const content: Document = data.vitaModel.vitatext.json;\r\n      console.log(content);\r\n      const portraitUrl: string = data.vitaModel.portrait.url;\r\n      setVitaData({ content: content, portraitUrl: portraitUrl });\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <PageComponent title=\"Vita\">\r\n      <div className=\" flex overflow-y-auto flex-col  md:flex-row justify-start\">\r\n        <div className=\"flex-1 order-2 flex flex-col md:order-1 space-y-5 text-base\">\r\n          {vitaData.content !== EMPTY_DOCUMENT\r\n            ? documentToReactComponents(\r\n                vitaData.content,\r\n                richtTextRendererOptions\r\n              )\r\n            : \"\"}\r\n        </div>\r\n        {/* <div className=\"flex-1 order-1 md:order-2 flex flex-row justify-center \">\r\n          {vitaData.portraitUrl ? (\r\n              <img src={vitaData.portraitUrl} className=\"w-96\"></img>\r\n           \r\n          ) : (\r\n            \"loading\"\r\n          )}\r\n        </div> */}\r\n      </div>\r\n    </PageComponent>\r\n  );\r\n};\r\n","import React, { ReactElement, FC, useEffect, useState } from \"react\"; // importing FunctionComponent\r\n\r\ninterface titleProps {\r\n    titles: string[]\r\n}\r\n\r\nexport const ArtworkTitleListComponent: FC<titleProps> = ({titles}) => {\r\n  const scrollToItem = (item: string) => {\r\n    document.getElementById(item)?.scrollIntoView({block: \"start\", behavior: \"smooth\"});\r\n  };\r\n  return (\r\n    <aside className=\"flex-initial w-1/4\">\r\n      <div className=\" flex flex-col justify-start items-start space-y-3\">\r\n        {titles.map((title:string, index:number) => {\r\n          return (<>\r\n            <div onClick={(e) => scrollToItem(title)} className=\"flex-1 flex w-full flex-col space-y-3 cursor-pointer text-xl\">\r\n              <span className=\"flex-1\">{title}</span>\r\n              {index < titles.length -1 ?\r\n            <hr className=\"flex-initial w-4/5 gray-900\" />\r\n            :\r\n            ''}\r\n            </div>\r\n            \r\n            </>\r\n          );\r\n        })}\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n","import {gql} from  '@apollo/client';\r\nexport const GET_ARTOWRKS = gql`\r\n  query {\r\n     artworkCollection {\r\n         items{\r\n                description {\r\n                    json\r\n                }\r\n                title\r\n                creationDate\r\n                picturesCollection {\r\n                    items {\r\n                        title\r\n                        url(transform: {\r\n                            quality: 30\r\n                        })\r\n                    }\r\n                   \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    `","import React, {createContext, useContext} from 'react';\r\n\r\ntype ScreenWidthContextType = {\r\n    screenWidth: number;\r\n}\r\nexport const ScreenWidthContext = React.createContext<ScreenWidthContextType>({screenWidth:1000});\r\n\r\nexport const useScreenWidthContext = () => useContext(ScreenWidthContext);\r\n","export enum ENavState {\r\n    INITIAL = 0,\r\n    SHOWN = 1,\r\n    HIDDEN = 2\r\n}","import React, { FC, MouseEventHandler, useState } from \"react\";\r\nimport { IArtworkData } from \"../../../../types/IArtworkData\";\r\nimport { IImageData } from \"../../../../types/IImageData\";\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\r\nimport { richtTextRendererOptions } from \"../../../../utils/richTextRendererOptions\";\r\nimport { useScreenWidthContext } from \"../../../../contexts/screenWidthContext\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { GET_ARTOWRKS } from \"../../../../queries/getArtworks\";\r\nimport { GaleryComponent } from \"../../../Shared/GaleryComponent\";\r\ntype ArtworkDesktopProps = {\r\n  artwork: IArtworkData;\r\n  selectedArtwork: string;\r\n  onSelectArtwork: (title: string) => void;\r\n};\r\n\r\nexport const ArtworkDesktopComponent: FC<ArtworkDesktopProps> = ({\r\n  artwork,\r\n  selectedArtwork,\r\n  onSelectArtwork,\r\n}) => {\r\n  const [showArtworkGalery, setShowArtworkGalery] = useState<boolean>(false);\r\n  \r\n  return (\r\n    <section id={artwork.title} className=\"flex flex-initial flex-row w-3/4 items-stretch\">\r\n      {showArtworkGalery ? (\r\n        <GaleryComponent\r\n          images={artwork.images}\r\n          handleClose={() => setShowArtworkGalery(false)}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"flex-initial flex flex-col justify-start w-3/5 space-y-3\">\r\n        <h2 className=\"flex-initial text-xl \">{artwork.title}</h2>\r\n        <div className=\"flex-1 text-base\">\r\n          {documentToReactComponents(\r\n            artwork.description,\r\n            richtTextRendererOptions\r\n          )}\r\n        </div>\r\n        <div className=\"flex-initial flex flex-row-reverse px-10 \">\r\n          {artwork.images.length > 0 ? (\r\n            <span\r\n              className=\"text-lg cursor-pointer text-blue-600\"\r\n              onClick={(e) => setShowArtworkGalery(true)}\r\n            >\r\n              Open galery\r\n            </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"flex-initial w-2/5 flex flex-row justify-center items-start \">\r\n        <LazyLoad height={800} offset={200} overflow scroll once placeholder=\"loading\">\r\n          <img\r\n            className=\"cursor-pointer\"\r\n            src={artwork.images[0].url}\r\n            onClick={(e) => setShowArtworkGalery(true)}\r\n          />\r\n        </LazyLoad>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { IArtworkData } from \"../../../../types/IArtworkData\";\r\nimport { IImageData } from \"../../../../types/IImageData\";\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\r\nimport { richtTextRendererOptions } from \"../../../../utils/richTextRendererOptions\";\r\nimport { useScreenWidthContext } from \"../../../../contexts/screenWidthContext\";\r\nimport LazyLoad from \"react-lazyload\";\r\ntype ArtworkMobileProps = {\r\n  artwork: IArtworkData;\r\n  selectedArtwork: string;\r\n  onSelectArtwork: (title: string) => void;\r\n};\r\n\r\nexport const ArtworkMobileComponent: FC<ArtworkMobileProps> = ({\r\n  artwork,\r\n  selectedArtwork,\r\n  onSelectArtwork,\r\n}) => {\r\n  const { screenWidth } = useScreenWidthContext();\r\n  return (\r\n    <section id={artwork.title} className=\"flex flex-1 flex-col w-full space-y-3\">\r\n      <header\r\n        className=\"flex flex-initial h-20 text-xl leading-none\"\r\n        onClick={(e) => onSelectArtwork(artwork.title)}\r\n      >\r\n        {artwork.title}\r\n      </header>\r\n      {selectedArtwork === artwork.title && screenWidth <= 768 && \r\n      \r\n      <div\r\n        className=\"flex flex-1 flex-col space-y-5 overflow-hidden\"\r\n      >\r\n        <div className=\"flex flex-1 flex-col space-y-3\">\r\n          {documentToReactComponents(\r\n            artwork.description,\r\n            richtTextRendererOptions\r\n          )}\r\n        </div>\r\n        <div className=\"flex flex-1 flex-col space-y-10 pb-16 items-start\">\r\n          {artwork.images.map((pic: IImageData) => {\r\n            return (\r\n                <div className=\" flex flex-col justify-center\">\r\n                  <img className=\"full\" src={pic.url}></img>\r\n                </div>\r\n              \r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n}\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC, useState } from \"react\";\r\nimport { useScreenWidthContext } from \"../../../contexts/screenWidthContext\";\r\nimport { IArtworkData } from \"../../../types/IArtworkData\";\r\nimport { ArtworkDesktopComponent } from \"./ArtworkComponent/ArtworkDesktopComponent\";\r\nimport { ArtworkMobileComponent } from \"./ArtworkComponent/ArtworkMobileComponent\";\r\ntype ArtworkListProps = {\r\n  artworks: IArtworkData[];\r\n};\r\n\r\nexport const ArtworkListComponent: FC<ArtworkListProps> = ({ artworks }) => {\r\n  const [selectedArtwork, setSelectedArtwork] = useState<string>(\"\");\r\n  const onSelectArtwork = (title: string) => {\r\n    if (selectedArtwork === title) {\r\n      setSelectedArtwork(\"\");\r\n    } else {\r\n      setSelectedArtwork(title);\r\n    }\r\n  };\r\n\r\n  const onSelectArtworkMobile = (title: string) => {\r\n    onSelectArtwork(title);\r\n    const renderTimeout = setTimeout(() =>  document.getElementById(title)?.scrollIntoView({block: \"start\", behavior: \"smooth\"}),200 )\r\n   \r\n\r\n  }\r\n  const { screenWidth } = useScreenWidthContext();\r\n  return (\r\n    <div className=\"flex-1 h-full flex flex-col items-start space-y-2 md:space-y-20 overflow-y-scroll px-5 pb-32\">\r\n      {artworks.map((aw: IArtworkData) => {\r\n        return (\r\n          <>\r\n            {screenWidth > 768 ? (\r\n              <ArtworkDesktopComponent\r\n                artwork={aw}\r\n                selectedArtwork={selectedArtwork}\r\n                onSelectArtwork={onSelectArtwork}\r\n              />\r\n            ) : (\r\n              <ArtworkMobileComponent\r\n                artwork={aw}\r\n                selectedArtwork={selectedArtwork}\r\n                onSelectArtwork={onSelectArtworkMobile}\r\n              />\r\n            )}\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { ReactElement, FC, useEffect, useState } from \"react\"; // importing FunctionComponent\r\nimport { PageComponent } from \"../PageComponent\";\r\nimport { ArtworkTitleListComponent } from \"./ArtworklTitleListComponent\";\r\nimport { GET_ARTOWRKS } from \"../../../queries/getArtworks\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { useScreenWidthContext } from \"../../../contexts/screenWidthContext\";\r\nimport { IArtworkData } from \"../../../types/IArtworkData\";\r\nimport { ArtworkListComponent } from \"./ArtworkListComponent\";\r\n\r\nexport const WorkComponent: FC<any> = () => {\r\n  const { loading, error, data } = useQuery(GET_ARTOWRKS);\r\n  const { screenWidth } = useScreenWidthContext();\r\n  const [artworks, setArtworks] = useState<IArtworkData[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const artworks: IArtworkData[] = [];\r\n\r\n      for (let aw of data.artworkCollection.items) {\r\n        const title = aw.title;\r\n        const description = aw.description.json;\r\n        const images = aw.picturesCollection.items.map((pic: any) => ({\r\n          title: pic.title,\r\n          url: pic.url,\r\n        }));\r\n        const createDate = new Date(aw.creationDate);\r\n\r\n        artworks.push({\r\n          title: title,\r\n          description: description,\r\n          images: images,\r\n          creationDate: createDate,\r\n        });\r\n      }\r\n      artworks.sort((a: IArtworkData, b: IArtworkData) => {\r\n        return a.creationDate.getTime() - b.creationDate.getTime();\r\n      });\r\n      setArtworks(artworks);\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {}, [screenWidth]);\r\n  const titles: string[] = artworks.map((aw: IArtworkData) => aw.title);\r\n\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <PageComponent title=\"Work\">\r\n      <div\r\n        className=\"flex-1 h-full flex flex-row pt-7\"\r\n        onTouchMove={(e) => e.stopPropagation()}\r\n      >\r\n        {screenWidth > 768 ? <ArtworkTitleListComponent titles={titles} /> : \"\"}\r\n        <ArtworkListComponent artworks={artworks} />\r\n      </div>\r\n    </PageComponent>\r\n  );\r\n};\r\n","import React, { ReactElement, FC, useEffect, useState } from \"react\"; // importing FunctionComponent\r\nimport { PageComponent } from \"../PageComponent\";\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\n\r\nconst useStyles = makeStyles((theme:Theme) => ({\r\n    instagramIcon : {\r\n        fontSize: 80\r\n    }\r\n}))\r\n\r\n\r\nexport const ContactComponent: FC<any> = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <PageComponent title=\"Contact\">\r\n            <div className=\"flex flex-col py-5 justify-evenly space-y-6 px-10\">\r\n                <section>Email: scarab@posteo.de</section>\r\n                <section >\r\n                    <InstagramIcon className={classes.instagramIcon}  />\r\n                </section>\r\n                <section>\r\n                    <h2>Impressum und Datenschutz</h2>\r\n                    <p>asdsadsadsadsadsasdasd sadsadsadf asdsad asd sad asdsdads ad sad sa as fasfgasgawg asg asg asg sg sa </p>\r\n                </section>\r\n               \r\n            </div>\r\n        </PageComponent>\r\n    )\r\n}   \r\n","import React, { FC } from \"react\";\r\nimport { ENavState } from \"../../types/ENavState\";\r\n\r\ntype NavButtonProps = {\r\n  showNav: ENavState;\r\n  setShowNav: (showNavVal:ENavState) => void;\r\n};\r\n\r\nexport const NavButton: FC<NavButtonProps> = ({ showNav, setShowNav }) => {\r\n  const s: number = 0;\r\n  const toggleNav = (event: React.MouseEvent<HTMLElement>):void => {\r\n      event.stopPropagation();\r\n      if(showNav === ENavState.SHOWN){\r\n          setShowNav(ENavState.HIDDEN);\r\n      }else{\r\n          setShowNav(ENavState.SHOWN);\r\n      }\r\n  }\r\n  return (\r\n    <div className={\r\n        showNav === ENavState.SHOWN\r\n        ?\r\n        \"fixed top-5 right-20 h-8 w-12 flex flex-col justify-center items-center space-y-1 z-10 transition-right delay-100\"\r\n        :\r\n        \"fixed top-5 right-5 h-8 w-12 flex flex-col justify-center items-center space-y-1 z-10 transition-right delay-100\"\r\n    \r\n        }\r\n        onClick = {(event: React.MouseEvent<HTMLElement>) => toggleNav(event)}\r\n    >\r\n      <div className=\"w-8 h-0.5 bg-gray-400 rounded\"></div>\r\n      <div className=\"w-7 h-0.5 bg-gray-400 rounded\"></div>\r\n      <div className=\"w-8 h-0.5 bg-gray-400 rounded\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {ENavState} from '../../types/ENavState';\r\ntype NavbarProps = {\r\n    showNav: ENavState,\r\n    setShowNav:(navState:ENavState) => void\r\n\r\n};\r\n\r\nexport const Navbar: FC<NavbarProps> = ({showNav, setShowNav}) => {\r\n\r\nconst history = useHistory();\r\nfunction handleNavigate(navigationString:string):void{\r\n    console.log(\"pushing\")\r\n    history.push(navigationString);\r\n    setShowNav(ENavState.HIDDEN);\r\n}\r\n  return (\r\n    <div\r\n      className={\r\n          showNav === ENavState.SHOWN\r\n          ?\r\n          \"fixed h-full w-32 fixed bg-gray-50 top-0 right-0 flex flex-col items-start pl-10 pt-16 space-y-5 transition-right\"\r\n          :\r\n          \"fixed h-full w-32 fixed bg-gray-50 top-0 -right-44 flex flex-col items-start pl-10 pt-16 space-y-5 transition-right\"\r\n          \r\n        }\r\n      onClick={(e) => e.stopPropagation()}\r\n    >\r\n      <div className=\"flex\" onClick={e => handleNavigate(\"/\")}>Home</div>\r\n      <div className=\"flex\" onClick={e => handleNavigate(\"/Work\")}>Work</div>\r\n      <div className=\"flex\" onClick={e => handleNavigate(\"/Vita\")}>Vita</div>\r\n      <div className=\"flex\" onClick={e => handleNavigate(\"/Contact\")}>Contact</div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\n\nimport { VitaComponent } from \"./components/Pages/Vita/VitaComponent\";\nimport { WorkComponent } from \"./components/Pages/Work/WorkComponent\";\nimport { ContactComponent } from \"./components/Pages/Contact/ContactComponent\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  InMemoryCache,\n  useQuery,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { HashRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport { ScreenWidthContext } from \"./contexts/screenWidthContext\";\nimport { NavButton } from \"./components/Nav/NavButton\";\nimport { Navbar } from \"./components/Nav/Navbar\";\nimport { ENavState } from \"./types/ENavState\";\nconst httpLink = createHttpLink({\n  uri: \"https://graphql.contentful.com/content/v1/spaces/uqk48amkbrqw\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer JT8H7SZJQ_56AaEcsLIXMz4rDUrOpmvVmrWzx10KMl4`,\n    },\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const [screenWidth, setScreenWidth] = useState<number>(1000);\n  const [showNav, setShowNav] = useState<ENavState>(ENavState.INITIAL);\n  useEffect(() => {\n    setScreenWidth(window.innerWidth);\n\n    function handleResize(e: Event): void {\n      const screenW: number = window.innerWidth;\n      console.log(screenW);\n      setScreenWidth(screenW);\n    }\n    window.addEventListener(\"resize\", (e) => handleResize(e));\n\n    return () => document.removeEventListener(\"resize\", handleResize);\n  }, []);\n  console.log(screenWidth);\n  return (\n    <ScreenWidthContext.Provider value={{ screenWidth: screenWidth }}>\n      <ApolloProvider client={client}>\n        <Router>\n          <div className=\"h-screen flex flex-col overvlow-hidden\" onClick={e => setShowNav(ENavState.HIDDEN)}>\n            <header className=\" h-10 flex-initial flex-row\">\n              <div className=\"flex-1 flex px-5 flex flex-row content-stretch font-mono\">\n                {screenWidth && screenWidth > 768 ? (\n                  <nav className=\"hidden md:flex-1 md:flex md:flex-column md:justify-end\">\n                    <ul className=\"flex-1 list-none flex flex-row justify-evenly content-center py-2 leading-none\">\n                      \n                    <li>\n                        <NavLink  activeClassName=\"underline\" to=\"/contact\"><b>Home</b></NavLink>\n                      </li>\n                      <li>\n                        <NavLink activeClassName=\"underline\" to=\"/work\"><b>Work</b></NavLink>\n                      </li>\n                      <li>\n                        <NavLink  activeClassName=\"underline\" to=\"/vita\"><b>Vita</b></NavLink>\n                      </li>\n                      <li>\n                        <NavLink  activeClassName=\"underline\" to=\"/contact\"><b>Contact</b></NavLink>\n                      </li>\n                    </ul>\n                  </nav>\n                ) : (\n                  <>\n                    <NavButton showNav={showNav} setShowNav={setShowNav} />\n\n                    <Navbar showNav={showNav} setShowNav={setShowNav} />\n                  </>\n                )}\n              </div>\n            </header>\n            <Route exact path=\"/\">\n              Home\n            </Route>\n            <Route path=\"/vita\" component={VitaComponent} />\n            <Route path=\"/work\" component={WorkComponent} />\n            <Route path=\"/contact\" component={ContactComponent} />\n          </div>\n        </Router>\n      </ApolloProvider>\n    </ScreenWidthContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}